"use strict";
// src/node.ts
// Copyright 2018-2020 Leo C. Singleton IV <leo@leosingleton.com>
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.nodeDirname = exports.nodeReadFile = void 0;
const fsAsync = require("./fsAsync");
const path = require("path");
/** Implementation of ReadFileImpl for NodeJS */
function nodeReadFile(filename, directory) {
    return __awaiter(this, void 0, void 0, function* () {
        // Resolve the full file path
        const filePath = path.resolve(directory || '', filename);
        // Read the file
        const data = yield fsAsync.readFile(filePath, 'utf-8');
        return { path: filePath, contents: data };
    });
}
exports.nodeReadFile = nodeReadFile;
/** Implementation of DirnameImpl for NodeJS and Webpack */
function nodeDirname(p) {
    return path.dirname(p);
}
exports.nodeDirname = nodeDirname;
//# sourceMappingURL=node.js.map